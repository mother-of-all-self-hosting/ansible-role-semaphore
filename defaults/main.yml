# SPDX-FileCopyrightText: 2023 Julian-Samuel GebÃ¼hr
# SPDX-FileCopyrightText: 2023 - 2024 Nikita Chernyi
# SPDX-FileCopyrightText: 2023 - 2025 Slavi Pantaleev
# SPDX-FileCopyrightText: 2024 Sergio Durigan Junior
# SPDX-FileCopyrightText: 2024 - 2025 MASH project contributors
# SPDX-FileCopyrightText: 2025 Suguru Hirahara
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
# Project source code URL: https://github.com/ansible-semaphore/semaphore

semaphore_enabled: true

semaphore_identifier: semaphore
semaphore_base_path: "/{{ semaphore_identifier }}"
semaphore_data_path: "{{ semaphore_base_path }}/data"
semaphore_config_path: "{{ semaphore_base_path }}/config"
semaphore_tmp_path: "{{ semaphore_base_path }}/tmp" # mounted to /tmp/semaphore (`SEMAPHORE_PLAYBOOK_PATH`)
semaphore_customized_container_src_path: "{{ semaphore_base_path }}/customized-container-src"

# renovate: datasource=docker depName=semaphoreui/semaphore versioning=semver
semaphore_version: 2.15.4

semaphore_uid: ''
semaphore_gid: ''

# The hostname at which Semaphore UI is served.
semaphore_hostname: ''

semaphore_path_prefix: /

semaphore_container_image: "{{ semaphore_container_image_registry_prefix }}semaphoreui/semaphore:{{ semaphore_container_image_tag }}"

# semaphore_container_image_customizations_enabled controls whether a customized Semaphore UI image will be built.
#
# We toggle this variable to `true` when certain features which require a custom build are enabled.
# Feel free to toggle this to `true` yourself and specify build steps in `semaphore_container_image_customizations_dockerfile_body_custom`.
#
# See:
# - `roles/semaphore-server/templates/customizations/Dockerfile.j2`
# - `semaphore_container_image_customizations_dockerfile_body_custom`
# - `semaphore_container_image_customized`
# - `semaphore_container_image_final`
semaphore_container_image_customizations_enabled: |
  {{
    (
      semaphore_container_image_customizations_just_installation_enabled
      or
      semaphore_container_image_customizations_packages_to_install | length > 0
    )
  }}

# just support
# Also see ../../templates/customizations/Dockerfile.j2
semaphore_container_image_customizations_just_installation_enabled: false
semaphore_container_image_customizations_just_packages: ['just']

# A list of packages to install in the customized Semaphore UI container image.
# To add your own, use `semaphore_container_image_customizations_packages_to_install_custom`
semaphore_container_image_customizations_packages_to_install: "{{ (semaphore_container_image_customizations_packages_to_install_auto + semaphore_container_image_customizations_packages_to_install_custom) | unique }}"
semaphore_container_image_customizations_packages_to_install_auto: |
  {{
    (semaphore_container_image_customizations_just_packages if semaphore_container_image_customizations_just_installation_enabled else [])
  }}
semaphore_container_image_customizations_packages_to_install_custom: []

# semaphore_container_image_customizations_dockerfile_body_custom contains your custom Dockerfile steps
# for building your customized Semaphore UI image based on the original (upstream) image (`semaphore_container_image`).
# A `FROM ...` clause is included automatically so you don't have to.
#
# Example:
# semaphore_container_image_customizations_dockerfile_body_custom: |
#  RUN echo 'This is a custom step for building the customized container image for semaphore.'
#  RUN echo 'You can override semaphore_container_image_customizations_dockerfile_body_custom to add your own steps.'
#  RUN echo 'You do NOT need to include a FROM clause yourself.'
semaphore_container_image_customizations_dockerfile_body_custom: ''

# semaphore_container_image_customized is the name of the locally built Semaphore UI image
# which adds various customizations on top of the original (upstream) Semaphore UI image.
# This image will be based on the upstream `semaphore_container_image` image, only if `semaphore_container_image_customizations_enabled: true`.
semaphore_container_image_customized: "localhost/semaphore:{{ semaphore_container_image_tag }}-customized"

# semaphore_container_image_final holds the name of the Semaphore UI image to run depending on whether or not customizations are enabled.
semaphore_container_image_final: "{{ semaphore_container_image_customized if semaphore_container_image_customizations_enabled else semaphore_container_image }}"

semaphore_container_image_tag: "v{{ semaphore_version }}"
semaphore_container_image_registry_prefix: "{{ semaphore_container_image_registry_prefix_upstream }}"
semaphore_container_image_registry_prefix_upstream: "{{ semaphore_container_image_registry_prefix_upstream_default }}"
semaphore_container_image_registry_prefix_upstream_default: docker.io/
semaphore_container_image_force_pull: "{{ semaphore_container_image.endswith(':latest') }}"

# Controls whether the Semaphore UI container exposes its HTTP port (as defined by `semaphore_container_http_port`).
#
# Takes an "<ip>:<port>" or "<port>" value (e.g. "127.0.0.1:8731"), or empty string to not expose.
semaphore_container_http_host_bind_port: ""

# The base container network. It will be auto-created by this role if it doesn't exist already.
semaphore_container_network: '{{ semaphore_identifier }}'

# The port number in the container
semaphore_container_http_port: 3000

# A list of additional container networks that the container would be connected to.
# The role does not create these networks, so make sure they already exist.
# Use this to expose this container to a reverse proxy, which runs in a different container network.
semaphore_container_additional_networks: "{{ semaphore_container_additional_networks_auto + semaphore_container_additional_networks_custom }}"
semaphore_container_additional_networks_auto: []
semaphore_container_additional_networks_custom: []

# semaphore_container_labels_traefik_enabled controls whether labels to assist a Traefik reverse-proxy will be attached to the container.
# See `../templates/labels.j2` for details.
#
# To inject your own other container labels, see `semaphore_container_labels_additional_labels`.
semaphore_container_labels_traefik_enabled: true
semaphore_container_labels_traefik_docker_network: "{{ semaphore_container_network }}"
semaphore_container_labels_traefik_hostname: "{{ semaphore_hostname }}"
# The path prefix must either be `/` or not end with a slash (e.g. `/semaphore`).
semaphore_container_labels_traefik_path_prefix: "{{ semaphore_path_prefix }}"
semaphore_container_labels_traefik_rule: "Host(`{{ semaphore_container_labels_traefik_hostname }}`){% if semaphore_container_labels_traefik_path_prefix != '/' %} && PathPrefix(`{{ semaphore_container_labels_traefik_path_prefix }}`){% endif %}"
semaphore_container_labels_traefik_priority: 0
semaphore_container_labels_traefik_entrypoints: web-secure
semaphore_container_labels_traefik_tls: "{{ semaphore_container_labels_traefik_entrypoints != 'web' }}"
semaphore_container_labels_traefik_tls_certResolver: default  # noqa var-naming

# Controls which additional headers to attach to all HTTP requests.
# To add your own custom request headers, use `semaphore_container_labels_traefik_additional_request_headers_custom`
semaphore_container_labels_traefik_additional_request_headers: "{{ semaphore_container_labels_traefik_additional_request_headers_auto | combine(semaphore_container_labels_traefik_additional_request_headers_custom) }}"
semaphore_container_labels_traefik_additional_request_headers_auto: {}
semaphore_container_labels_traefik_additional_request_headers_custom: {}

# Controls which additional headers to attach to all HTTP responses.
# To add your own custom response headers, use `semaphore_container_labels_traefik_additional_response_headers_custom`
semaphore_container_labels_traefik_additional_response_headers: "{{ semaphore_container_labels_traefik_additional_response_headers_auto | combine(semaphore_container_labels_traefik_additional_response_headers_custom) }}"
semaphore_container_labels_traefik_additional_response_headers_auto: |
  {{
    {}
    | combine ({'X-XSS-Protection': semaphore_http_header_xss_protection} if semaphore_http_header_xss_protection else {})
    | combine ({'X-Content-Type-Options': semaphore_http_header_content_type_options} if semaphore_http_header_content_type_options else {})
    | combine ({'Content-Security-Policy': semaphore_http_header_content_security_policy} if semaphore_http_header_content_security_policy else {})
    | combine ({'Permission-Policy': semaphore_http_header_content_permission_policy} if semaphore_http_header_content_permission_policy else {})
    | combine ({'Strict-Transport-Security': semaphore_http_header_strict_transport_security} if semaphore_http_header_strict_transport_security and semaphore_container_labels_traefik_tls else {})
  }}
semaphore_container_labels_traefik_additional_response_headers_custom: {}

# semaphore_container_labels_additional_labels contains a multiline string with additional labels to add to the container label file.
# See `../templates/labels.j2` for details.
#
# Example:
# semaphore_container_labels_additional_labels: |
#   my.label=1
#   another.label="here"
semaphore_container_labels_additional_labels: ''

# Specifies the value of the `X-XSS-Protection` header
# Stops pages from loading when they detect reflected cross-site scripting (XSS) attacks.
#
# Learn more about it is here:
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
# - https://portswigger.net/web-security/cross-site-scripting/reflected
semaphore_http_header_xss_protection: "1; mode=block"

# Specifies the value of the `X-Content-Type-Options` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
semaphore_http_header_content_type_options: nosniff

# Specifies the value of the `Content-Security-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
semaphore_http_header_content_security_policy: frame-ancestors 'self'

# Specifies the value of the `Permission-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permission-Policy
semaphore_http_header_content_permission_policy: "{{ 'interest-cohort=()' if semaphore_floc_optout_enabled else '' }}"

# Specifies the value of the `Strict-Transport-Security` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
semaphore_http_header_strict_transport_security: "max-age=31536000; includeSubDomains{{ '; preload' if semaphore_hsts_preload_enabled else '' }}"

# Controls whether to send a "Permissions-Policy interest-cohort=();" header along with all responses
#
# Learn more about what it is here:
# - https://www.eff.org/deeplinks/2021/03/googles-floc-terrible-idea
# - https://paramdeo.com/blog/opting-your-website-out-of-googles-floc-network
# - https://amifloced.org/
#
# Of course, a better solution is to just stop using browsers (like Chrome), which participate in such tracking practices.
# See: `semaphore_content_permission_policy`
semaphore_floc_optout_enabled: true

# Controls if HSTS preloading is enabled
#
# In its strongest and recommended form, the [HSTS policy](https://www.chromium.org/hsts) includes all subdomains, and
# indicates a willingness to be "preloaded" into browsers:
# `Strict-Transport-Security: max-age=31536000; includeSubDomains; preload`
# For more information visit:
# - https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
# - https://hstspreload.org/#opt-in
# See: `semaphore_http_header_strict_transport_security`
semaphore_hsts_preload_enabled: false

# List of systemd services that the Semaphore UI systemd service depends on
semaphore_systemd_required_services_list: "{{ semaphore_systemd_required_services_list_default + semaphore_systemd_required_services_list_auto + semaphore_systemd_required_services_list_custom }}"
semaphore_systemd_required_services_list_default: "{{ [devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [] }}"
semaphore_systemd_required_services_list_auto: []
semaphore_systemd_required_services_list_custom: []

# List of systemd services that the Semaphore UI systemd service wants
semaphore_systemd_wanted_services_list: []

# Specify username for passwd file
semaphore_username: 'semaphore'

semaphore_database_mysql_username: semaphore
semaphore_database_mysql_password: ''
semaphore_database_mysql_port: 3306
semaphore_database_mysql_hostname: ''
semaphore_database_postgres_username: semaphore
semaphore_database_postgres_password: ''
semaphore_database_postgres_port: 5432
semaphore_database_postgres_hostname: ''

semaphore_database_name: semaphore

# Specify database to use
# Valid values: mysql, postgres, bolt
semaphore_database_dialect: ''

# Specify path to directory where cloned repositories and generated files are stored
# Default: /tmp/semaphore
semaphore_environment_variables_tmp_path: /tmp/semaphore

semaphore_admin_username: admin
semaphore_admin_password: ''
semaphore_admin_name: ''
semaphore_admin_email: ''

# Specify the path to serve Semaphore UI.
# Do not add a trailing /.
semaphore_environment_variables_web_root: ''

# key for encrypting access keys in database. It must be generated by using the following command: head -c32 /dev/urandom | base64
semaphore_access_key_encryption: ''

# Control if two-factor authentication with using TOTP is enabled
semaphore_environment_variables_totp_enabled: false

# Control if resetting TOTP using a recovery code by a user is allowed
semaphore_environment_variables_totp_allow_recovery: false

# Specify email details
semaphore_environment_variables_email_sender: ''
semaphore_environment_variables_email_host: ''
semaphore_environment_variables_email_port: ''
semaphore_environment_variables_email_username: ''
semaphore_environment_variables_email_password: ''
semaphore_environment_variables_email_secure: false

# Control if host key checking by the underlying connection plugin Ansible uses to connect to the host is enabled
# See: https://docs.ansible.com/ansible/latest/reference_appendices/config.html#envvar-ANSIBLE_HOST_KEY_CHECKING
semaphore_environment_variables_ansible_host_key_checking: false

# Additional environment variables to pass to the Semaphore UI container.
# You can use this to further influence the default configuration.
#
# Example:
# semaphore_environment_variables_additional_variables: |
#   SEMAPHORE_LDAP_ACTIVATED=yes
#   SEMAPHORE_LDAP_HOST=dc01.local.example.com
#   SEMAPHORE_LDAP_PORT='636'
#   SEMAPHORE_LDAP_NEEDTLS: 'yes'
#   SEMAPHORE_LDAP_DN_BIND: 'uid=bind_user,cn=users,cn=accounts,dc=local,dc=shiftsystems,dc=net'
#   SEMAPHORE_LDAP_PASSWORD: 'ldap_bind_account_password'
#   SEMAPHORE_LDAP_DN_SEARCH: 'dc=local,dc=example,dc=com'
#   SEMAPHORE_LDAP_SEARCH_FILTER: "(\u0026(uid=%s)(memberOf=cn=ipausers,cn=groups,cn=accounts,dc=local,dc=example,dc=com))"
semaphore_environment_variables_additional_variables: ''
