{#
SPDX-FileCopyrightText: 2023 Julian-Samuel GebÃ¼hr
SPDX-FileCopyrightText: 2023 Slavi Pantaleev
SPDX-FileCopyrightText: 2024 MASH project contributors
SPDX-FileCopyrightText: 2024 Nikita Chernyi
SPDX-FileCopyrightText: 2025 Suguru Hirahara

SPDX-License-Identifier: AGPL-3.0-or-later
#}

[Unit]
Description=Semaphore: Responsive web UI for running Ansible playbooks ({{ semaphore_identifier }})
{% for service in semaphore_systemd_required_services_list %}
Requires={{ service }}
After={{ service }}
{% endfor %}
{% for service in semaphore_systemd_wanted_services_list %}
Wants={{ service }}
{% endfor %}
DefaultDependencies=no

[Service]
Type=simple
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} stop -t {{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ semaphore_identifier }} 2>/dev/null || true'
ExecStartPre=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ semaphore_identifier }} 2>/dev/null || true'

ExecStartPre={{ devture_systemd_docker_base_host_command_docker }} create \
      --rm \
      --name={{ semaphore_identifier }} \
      --log-driver=none \
      --user={{ semaphore_uid }}:{{ semaphore_gid }} \
      --cap-drop=ALL \
      --read-only \
      --network={{ semaphore_container_network }} \
      {% if semaphore_container_http_host_bind_port %}
      -p {{ semaphore_container_http_host_bind_port }}:{{ semaphore_container_http_port }} \
      {% endif %}
      --env-file={{ semaphore_env_path }} \
      --label-file={{ semaphore_config_path }}/labels \
      --mount type=bind,src={{ semaphore_config_path }}/passwd,dst=/etc/passwd,ro \
      --mount type=bind,src={{ semaphore_dyn_config_path }},dst=/etc/semaphore \
      --mount type=bind,src={{ semaphore_playbook_path }},dst={{ semaphore_container_playbook_path }} \
      --tmpfs=/tmp:rw,noexec,nosuid,size=100m \
      {{ semaphore_container_image_final }}

{% for network in semaphore_container_additional_networks %}
ExecStartPre={{ devture_systemd_docker_base_host_command_docker }} network connect {{ network }} {{ semaphore_identifier }}
{% endfor %}

ExecStart={{ devture_systemd_docker_base_host_command_docker }} start --attach {{ semaphore_identifier }}

ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} stop -t {{ devture_systemd_docker_base_container_stop_grace_time_seconds }} {{ semaphore_identifier }} 2>/dev/null || true'
ExecStop=-{{ devture_systemd_docker_base_host_command_sh }} -c '{{ devture_systemd_docker_base_host_command_docker }} rm {{ semaphore_identifier }} 2>/dev/null || true'
Restart=always
RestartSec=30
SyslogIdentifier={{ semaphore_identifier }}

[Install]
WantedBy=multi-user.target
