# SPDX-FileCopyrightText: 2023 Julian-Samuel GebÃ¼hr
# SPDX-FileCopyrightText: 2023 - 2025 Slavi Pantaleev
# SPDX-FileCopyrightText: 2024 MASH project contributors
# SPDX-FileCopyrightText: 2025 Suguru Hirahara
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
- name: Ensure Semaphore path exists
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: "0700"
    owner: "{{ semaphore_uid }}"
    group: "{{ semaphore_gid }}"
  with_items:
    - { path: "{{ semaphore_base_path }}", when: true }
    - { path: "{{ semaphore_config_path }}", when: true }
    - { path: "{{ semaphore_dyn_config_path }}", when: true }
    - path: "{{ semaphore_customized_container_src_path }}"
      state: directory
      when: "{{ semaphore_container_image_customizations_enabled }}"

- name: Ensure Semaphore data paths exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
    owner: "{{ semaphore_uid }}"
    group: "{{ semaphore_gid }}"
  with_items:
    - "{{ semaphore_data_path }}"
    - "{{ semaphore_playbook_path }}"

- name: Ensure Semaphore support files installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/{{ item }}.j2"
    dest: "{{ semaphore_config_path }}/{{ item }}"
    owner: "{{ semaphore_uid }}"
    group: "{{ semaphore_gid }}"
    mode: "0640"
  with_items:
    - env
    - labels
    - passwd

- name: Ensure Semaphore container image is pulled via community.docker.docker_image
  when: devture_systemd_docker_base_container_image_pull_method == 'ansible-module'
  community.docker.docker_image:
    name: "{{ semaphore_container_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
    force_source: "{{ semaphore_container_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else semaphore_container_image_force_pull }}"
  register: result
  retries: "{{ devture_playbook_help_container_retries_count }}"
  delay: "{{ devture_playbook_help_container_retries_delay }}"
  until: result is not failed

- name: Ensure Semaphore container image is pulled via ansible.builtin.command
  when: devture_systemd_docker_base_container_image_pull_method == 'command'
  ansible.builtin.command:
    cmd: "{{ devture_systemd_docker_base_host_command_docker }} pull {{ semaphore_container_image }}"
  register: result
  retries: "{{ devture_playbook_help_container_retries_count }}"
  delay: "{{ devture_playbook_help_container_retries_delay }}"
  until: result is not failed
  changed_when: "'Downloaded newer image' in result.stdout"

- name: Run if container image customizations are enabled
  when: "semaphore_container_image_customizations_enabled | bool"
  block:
    - name: Ensure customizations Dockerfile is created
      ansible.builtin.template:
        src: "{{ role_path }}/templates/customizations/Dockerfile.j2"
        dest: "{{ semaphore_customized_container_src_path }}/Dockerfile"
        owner: "{{ semaphore_uid }}"
        group: "{{ semaphore_gid }}"
        mode: "0640"
      register: semaphore_container_image_customizations_dockerfile_result

    - name: Ensure customized container image for Semaphore is built
      community.docker.docker_image:
        name: "{{ semaphore_container_image_customized }}"
        source: build
        force_source: "{{ semaphore_container_image_customizations_dockerfile_result.changed }}"
        build:
          dockerfile: Dockerfile
          path: "{{ semaphore_customized_container_src_path }}"
          pull: true

- name: Ensure Semaphore container network is created via community.docker.docker_network
  when: devture_systemd_docker_base_container_network_creation_method == 'ansible-module'
  community.docker.docker_network:
    enable_ipv6: "{{ devture_systemd_docker_base_ipv6_enabled }}"
    name: "{{ semaphore_container_network }}"
    driver: bridge
    driver_options: "{{ devture_systemd_docker_base_container_networks_driver_options }}"

- name: Ensure Semaphore container network is created via ansible.builtin.command
  when: devture_systemd_docker_base_container_network_creation_method == 'command'
  ansible.builtin.command:
    cmd: >-
      {{ devture_systemd_docker_base_host_command_docker }} network create
      {% if devture_systemd_docker_base_ipv6_enabled %}--ipv6{% endif %}
      {{ devture_systemd_docker_base_container_networks_driver_options_string }}
      {{ semaphore_container_network }}
  register: network_creation_result
  changed_when: network_creation_result.rc == 0
  failed_when: network_creation_result.rc != 0 and 'already exists' not in network_creation_result.stderr

- name: Ensure Semaphore systemd service is present
  ansible.builtin.template:
    src: "{{ role_path }}/templates/systemd/semaphore.service.j2"
    dest: "{{ devture_systemd_docker_base_systemd_path }}/{{ semaphore_identifier }}.service"
    mode: "0644"
